//********************************************
//
//	bubble_sort.cpp
//	CSCI 241 Assignment 1
//
//	Created by Gerald Ellsworth (z1885378)
//
//********************************************

#include <iostream>
#include <iomanip>
#include <utility>

using namespace std;

#define NUM_PER_LINE 8
#define NUM_WIDTH 8

int build_array(int[]);
void bubble_sort(int[], int);
void print_array(int[], int);

int main()
{
	int array[1000];
	int count;

	count = build_array(array);
	bubble_sort(array, count);
	print_array(array, count);

	return 0;
}

//*
//Builds an array of integers from a list given by a user.
//********************************************************

int build_array(int array[])
{
	int count = 0;

	while (cin >> array[count])				//while loop that takes the given value from the txt file and puts it into an array.
	{
		count++;
	}

	return count;
}

//
//Sorts the array using the bubble sort method.
//
//Loops the through given list to find the largest element between two given integers
//and swaps the higher number to the right side of the pair continually until the
//highest number is at the end of the list and the lowest is at the beginning.
//************************************************************************************

void bubble_sort(int array[], int n)
{
	int i;
	bool swapped;						//set a boolean term to determine whether a value is swapped or not.
	do
	{
		swapped = false;				//starting at false and only becomes true once a value has flipped.
		i = 1;
		while (i < n)					//while loop that determines if an integer is larger than the number
		{						//to its right side. If it is, swap them.
			if (array[i-1] > array[i])
			{
				swap(array[i - 1],array[i]);
				swapped = true;
			}
			i = i +  1;
		}
	}
	while ((swapped == true));
}

//*
//Prints the newly sorted array to the user in a neat fashion.
//************************************************************

void print_array(int array[], int count)
{
	int i;

	for (i = 0; i < count; i++)
	{
		cout << setw(NUM_WIDTH) << array[i];		//sets the number of spaces between integers in the printed list.

		if ((i+1) % NUM_PER_LINE == 0)			//if the array number is a multiple of 8, we will move to the next line.
			cout << endl;
	}

	if (i % NUM_PER_LINE != 0)				//this makes sure that if the list ends at a value other than 8,
		cout << endl;					//the list will end and go to the next line to complete.
}
